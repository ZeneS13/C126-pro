{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Capture = function (_React$Component) {\n  _inherits(Capture, _React$Component);\n\n  var _super = _createSuper(Capture);\n\n  function Capture() {\n    var _this;\n\n    _classCallCheck(this, Capture);\n\n    _this = _super.call(this);\n\n    _this.pickImage = function _callee() {\n      var result, _data, res, filetype, Fname, _fileToUp;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 3:\n              result = _context.sent;\n              console.log(result);\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri\n                });\n\n                console.log(result.uri);\n                _data = new FormData();\n                res = result.uri;\n                filetype = \"image/\" + res.split('.')[res.split('.').length - 1];\n                Fname = res.split('/')[res.split('/').length - 1];\n                _fileToUp = {\n                  uri: res,\n                  name: Fname,\n                  type: filetype\n                };\n              }\n\n              data.append(fileToUp);\n              fetch(\"https://c18f-110-226-131-22.ngrok.io/predDigit\", {\n                method: 'POST',\n                body: data,\n                headers: {\n                  \"content-type\": \"multipart/form-data\"\n                }\n              }).then(function (response) {\n                response.json();\n              }).then(function (result) {\n                console.log(result);\n              }).catch(function (error) {\n                console.log(error);\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    };\n\n    _this.state = {\n      image: null\n    };\n    return _this;\n  }\n\n  _createClass(Capture, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          onPress: this.pickImage(),\n          children: _jsx(Text, {\n            children: \"\\\"Click here to see number\\\"\"\n          })\n        })\n      });\n    }\n  }]);\n\n  return Capture;\n}(React.Component);\n\nexport { Capture as default };","map":{"version":3,"sources":["C:/Users/sango/OneDriveXX/Documents/whjr/python/C126/ImageDetection/screens/capture.js"],"names":["React","ImagePicker","Capture","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","setState","image","uri","data","FormData","res","filetype","split","length","Fname","fileToUp","name","type","append","fetch","method","body","headers","then","response","json","catch","error","state","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;IAIqBC,O;;;;;AACjB,qBAAa;AAAA;;AAAA;;AACT;;AADS,UAQbC,SARa,GAQH;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEaF,WAAW,CAACG,uBAAZ,CAAoC;AACnDC,gBAAAA,UAAU,EAAEJ,WAAW,CAACK,gBAAZ,CAA6BC,GADU;AAEnDC,gBAAAA,aAAa,EAAE,IAFoC;AAGnDC,gBAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH2C;AAInDC,gBAAAA,OAAO,EAAE;AAJ0C,eAApC,CAFb;;AAAA;AAEFC,cAAAA,MAFE;AASJC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,kBAAI,CAACA,MAAM,CAACG,SAAZ,EAAuB;AACrB,sBAAKC,QAAL,CAAc;AAACC,kBAAAA,KAAK,EAACL,MAAM,CAACM;AAAd,iBAAd;;AACAL,gBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACM,GAAnB;AACMC,gBAAAA,KAHe,GAGT,IAAIC,QAAJ,EAHS;AAIjBC,gBAAAA,GAJiB,GAIXT,MAAM,CAACM,GAJI;AAKjBI,gBAAAA,QALiB,cAKED,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeF,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeC,MAAf,GAAsB,CAArC,CALF;AAMjBC,gBAAAA,KANiB,GAMXJ,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeF,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeC,MAAf,GAAsB,CAArC,CANW;AAOfE,gBAAAA,SAPe,GAON;AACXR,kBAAAA,GAAG,EAACG,GADO;AAEXM,kBAAAA,IAAI,EAACF,KAFM;AAGXG,kBAAAA,IAAI,EAACN;AAHM,iBAPM;AAWtB;;AACDH,cAAAA,IAAI,CAACU,MAAL,CAAYH,QAAZ;AACAI,cAAAA,KAAK,CAAC,gDAAD,EAAkD;AAACC,gBAAAA,MAAM,EAAC,MAAR;AAAeC,gBAAAA,IAAI,EAACb,IAApB;AAA0Bc,gBAAAA,OAAO,EAAC;AAAC,kCAAe;AAAhB;AAAlC,eAAlD,CAAL,CAAkIC,IAAlI,CAAuI,UAACC,QAAD,EAAY;AACnJA,gBAAAA,QAAQ,CAACC,IAAT;AAAgB,eADhB,EACkBF,IADlB,CACuB,UAACtB,MAAD,EAAU;AAACC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAAoB,eADtD,EACwDyB,KADxD,CAC8D,UAACC,KAAD,EAAS;AAACzB,gBAAAA,OAAO,CAACC,GAAR,CAAYwB,KAAZ;AAAmB,eAD3F;AAxBI;AAAA;;AAAA;AAAA;AAAA;AA4BFzB,cAAAA,OAAO,CAACC,GAAR;;AA5BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARG;;AAET,UAAKyB,KAAL,GAAW;AACPtB,MAAAA,KAAK,EAAC;AADC,KAAX;AAFS;AAMZ;;;;WAkCD,kBAAQ;AACJ,aACI,KAAC,IAAD;AAAA,kBACE,KAAC,gBAAD;AAEA,UAAA,OAAO,EAAE,KAAKb,SAAL,EAFT;AAAA,oBAGI,KAAC,IAAD;AAAA;AAAA;AAHJ;AADF,QADJ;AAYH;;;;EAtDgCH,KAAK,CAACuC,S;;SAAtBrC,O","sourcesContent":["import * as React from 'react';\r\nimport {View, TouchableOpacity, Text} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n \r\n\r\nexport default class Capture extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            image:null\r\n        }\r\n\r\n    }\r\n\r\n    pickImage=async()=>{\r\n        try{\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n          });\r\n      \r\n          console.log(result);\r\n      \r\n          if (!result.cancelled) {\r\n            this.setState({image:result.uri});\r\n            console.log(result.uri)\r\n            const data= new FormData()\r\n            var res = result.uri\r\n            var filetype= `image/${res.split('.')[res.split('.').length-1]}`\r\n            var Fname=res.split('/')[res.split('/').length-1]\r\n            const fileToUp={\r\n                uri:res,\r\n                name:Fname,\r\n                type:filetype}\r\n          }\r\n          data.append(fileToUp)\r\n          fetch(\"https://c18f-110-226-131-22.ngrok.io/predDigit\",{method:'POST',body:data, headers:{\"content-type\":\"multipart/form-data\"}}).then((response)=>{\r\n          response.json()}).then((result)=>{console.log(result)}).catch((error)=>{console.log(error)})\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View>\r\n              <TouchableOpacity\r\n              \r\n              onPress={this.pickImage()}>\r\n                  <Text>\r\n                      \"Click here to see number\"\r\n                  </Text>\r\n                 \r\n              </TouchableOpacity>  \r\n            </View>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}